🚀 Coolify Platform Deployment

Deployment completed at: $(date)

📊 Configuration:
- Platform: Coolify
- Database: PostgreSQL
- Cache: Redis
- WebSocket: Soketi
- App Port: ${APP_PORT:-8000}

🌐 Access Information:
- Coolify Dashboard: http://localhost:${APP_PORT:-8000}
- Database: PostgreSQL on port 5432
- Redis: Redis on port 6379
- WebSocket: Soketi on port ${SOKETI_PORT:-6001}

📁 Directory Structure Created:
./data/coolify/
├── source/
│   └── .env              # Coolify configuration
├── ssh/                  # SSH keys
├── applications/         # Application data
├── databases/           # Database backups
├── services/            # Service configurations
├── backups/             # System backups
└── webhooks-during-maintenance/

🔧 Next Steps:
1. Access Coolify at http://localhost:${APP_PORT:-8000}
2. Complete the initial setup wizard
3. Configure your first application deployment

📚 Documentation:
- Coolify Docs: https://coolify.io/docs
- GitHub: https://github.com/coollabsio/coolify

└── crowdsec/
    ├── acquis.yaml
    ├── config.yaml
    └── profiles.yaml
📁 Additional:
./crowdsec_logs/          # Log volume for CrowdSec

🛡️ CrowdSec Notes:
- AppSec and log parsing is configured
- Prometheus and API are enabled
- CAPTCHA and remediation profiles are active
- Remember to get the bouncer API key after containers start:
  docker exec crowdsec cscli bouncers add traefik-bouncer

