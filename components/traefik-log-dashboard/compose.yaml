
  # Optional: MaxMind GeoIP Database Updater
  maxmind-updater:
    image: alpine:latest
    #container_name: maxmind-db-updater
    restart: "no"
    volumes:
      - ./config/maxmind:/data
    environment:
      - MAXMIND_LICENSE_KEY=${MAXMIND_LICENSE_KEY:-your-license-key-here}
    command: >
      sh -c "
        apk add --no-cache wget tar &&
        cd /data &&
        if [ ! -f GeoLite2-City.mmdb ] || [ "$(find . -name 'GeoLite2-City.mmdb' -mtime +7)" ]; then
          echo 'Downloading/updating GeoLite2-City database...'
          wget -O GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${LICENSE_KEY}&suffix=tar.gz" &&
          tar --wildcards -xzf GeoLite2-City.tar.gz --strip-components=1 '*/GeoLite2-City.mmdb' &&
          rm -f GeoLite2-City.tar.gz &&
          echo 'GeoLite2-City database updated successfully'

        elif [ ! -f GeoLite2-Country.mmdb ] || [ "$(find . -name 'GeoLite2-Country.mmdb' -mtime +7)" ]; then
          echo 'Downloading/updating GeoLite2-Country database...'
          wget -O GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${LICENSE_KEY}&suffix=tar.gz" &&
          tar --wildcards -xzf GeoLite2-Country.tar.gz --strip-components=1 '*/GeoLite2-Country.mmdb' &&
          rm -f GeoLite2-Country.tar.gz &&
          echo 'GeoLite2-Country database updated successfully'

        else
          echo 'Both MaxMind databases are up to date.'
        fi
      "

#  The following is commented out for now - wait for hhf to fully release
  # Traefik Log Dashboard Agent
  traefik-agent:
    image: hhftechnology/traefik-log-dashboard-agent:latest
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./data/positions:/data      
      - ./config/traefik/logs:/logs:ro # Mount the Traefik logs directory
      - ./config/maxmind:/geoip:ro  # MaxMind GeoIP databases
    environment:
      # Log Paths
      - TRAEFIK_LOG_DASHBOARD_ACCESS_PATH=/logs/access.log
      - TRAEFIK_LOG_DASHBOARD_ERROR_PATH=/logs/access.log
      # Authentication
      - TRAEFIK_LOG_DASHBOARD_AUTH_TOKEN=${MAXMIND_LICENSE_KEY:-your-license-key-here}  #lets use the maxmind license key for now
      # System Monitoring
      - TRAEFIK_LOG_DASHBOARD_SYSTEM_MONITORING=true
      # GeoIP Configuration (NEW)
      - TRAEFIK_LOG_DASHBOARD_GEOIP_ENABLED=true
      - TRAEFIK_LOG_DASHBOARD_GEOIP_CITY_DB=/geoip/GeoLite2-City.mmdb
      - TRAEFIK_LOG_DASHBOARD_GEOIP_COUNTRY_DB=/geoip/GeoLite2-Country.mmdb
      # Log Format (optional)
      - TRAEFIK_LOG_DASHBOARD_LOG_FORMAT=json
      # Server Port
      - PORT=5000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/logs/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Traefik Log Dashboard - Next.js web UI
  traefik-dashboard:
    image: hhftechnology/traefik-log-dashboard:latest
    container_name: traefik-log-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Agent Configuration
      - AGENT_API_URL=http://traefik-agent:5000
      - AGENT_API_TOKEN=${MAXMIND_LICENSE_KEY:-your-license-key-here} #lets use the maxmind license key for now
      # Node Environment
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      traefik-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
